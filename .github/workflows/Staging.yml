name: Staging Deployment

on:
  pull_request:
    branches: [main]

permissions:
  contents: read # Read repository contents
  pull-requests: write # Comment on pull requests
  actions: read # Read workflow run status
  checks: write # Update check status

jobs:
  staging-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: Preview # This tells GitHub to use the Preview environment secrets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # need add secrets based on staging env
      # - name: Build check
      #   run: npm run build

      - name: Debug DATABASE_URL
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          echo "DATABASE_URL length: ${#DATABASE_URL}"
          echo "DATABASE_URL starts with: ${DATABASE_URL:0:20}..."

      - name: Run database migration to staging
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Run integration tests
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: npm run test:integration

      - name: Deploy to Vercel Preview
        id: vercel-deploy
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel --token $VERCEL_TOKEN --prod=false --confirm > deployment-url.txt
          echo "VERCEL_URL=$(cat deployment-url.txt | grep -o 'https://[^[:space:]]*')" >> $GITHUB_OUTPUT

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request' && steps.vercel-deploy.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.vercel-deploy.outputs.VERCEL_URL }}';
            const comment = `ðŸš€ **Staging Preview Deployed!**

            Preview URL: ${deploymentUrl}

            âœ… Database migration completed
            âœ… Integration tests passed
            âœ… Vercel preview deployed

            The preview will be available at the URL above.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
